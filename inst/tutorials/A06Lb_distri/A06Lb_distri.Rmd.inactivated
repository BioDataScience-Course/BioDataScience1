---
title: "Distributions continues"
author: "Guyliann Engels & Philippe Grosjean"
description: "**SDD I Module 6** Calculs avec une distributions normale."
tutorial:
  id: "A07La_distri"
  version: 3.0.0/5
output:
  learnr::tutorial:
    progressive: true
    allow_skip: true
runtime: shiny_prerendered
---

```{r setup, include=FALSE}
BioDataScience1::learnr_setup()
SciViews::R("infer")
library(BioDataScience1)
```

```{r, echo=FALSE}
BioDataScience1::learnr_banner()
```

```{r, context="server"}
if (Sys.info()["user"] == "rstudio-connect") {
  options(learnr_user_id = session$user)
  assignInNamespace("default_user_id", function() {
    getOption("learnr_user_id", unname(Sys.info()["user"]))
  }, ns = "learnr")
}
BioDataScience1::learnr_server(input, output, session)
```

------------------------------------------------------------------------

## Objectifs

La loi de distribution normale est centrale en statistiques. Ce tutoriel vous permet d'auto-√©valuer vos acquis √† son sujet. Vous allez¬†:

-   V√©rifier que vous comprenez bien la logique des calculs autour de la distribution normale

-   Pouvoir calculer des quantiles √† partir de probabilit√©s

-   √ätre capable de calculer des probabilit√©s √† partir de quantiles


Vous devez avoir √©tudi√© le contenu du [module 6](https://wp.sciviews.org/sdd-umons/?iframe=wp.sciviews.org/sdd-umons-2024/probacorr.html) du cours SDD I, et en particulier les sections relatives √† la [distribution normale](https://wp.sciviews.org/sdd-umons/?iframe=wp.sciviews.org/sdd-umons-2024/distribution-normale.html). Assurez-vous √©galement au pr√©alable d'√™tre √† l'aise avec le calcul des probabilit√©s (que vous v√©rifiez avec le learnr `BioDataScience1::run("A06La_proba")`).

## Distribution normale

![](images/para_normal_distribution.jpg)

La distribution normale (ou Gaussienne) est appel√©e comme cela parce que c'est celle qui se rencontre le plus souvent. Elle s'observe √† chaque fois que le r√©sultat est la somme de petits effets al√©atoires qui se combinent. Elle a une forme caract√©ristique, dite "en cloche".

### Graphique

Employez R pour repr√©senter la densit√© de probabilit√© de la distribution $Y \sim N(10, 9)$ (attention √† la diff√©rence entre la variance ici et l'√©cart type "sigma" qui est utilis√© dans la fonction de calcul)¬†!

<!-- üí¨ **Ce code correspond au snippet `.indens`** [`.in` = (d)`i`stribution: `n`ormal]. -->

```{r normal1_h2, exercise=TRUE, exercise.lines=5}
N1 <- dist_normal(mu = ___, sigma = ___)
___(___) +
  ___("Densit√© de probabilit√©")
```

```{r normal1_h2-hint-1}
N1 <- dist_normal(mu = ___, sigma = ___)
___(___) +
  ___("Densit√© de probabilit√©")

 #### ATTENTION: Hint suivant = solution !####
```

```{r normal1_h2-solution}
## Solution ##
N1 <- dist_normal(mu = 10, sigma = 3)
chart(N1) +
  ylab("Densit√© de probabilit√©")
```

```{r normal1_h2-check}
grade_code("Ceci est plut√¥t simple √† r√©aliser une fois que l'on se rappelle que l'√©cart type \"sigma\" est la racine carr√©e dce la variance. La ligne avec `ylab()` n'est l√† que pour s'assurer d'avoir le label de l'axe en fran√ßais.")
```

Ajoutez maintenant sur le graphique une aire en rouge d√©limit√©e entre les quantiles 8 et 12 et annotez-l√† en son centre avec l'indication "P[8, 12]" en rouge. Pour ajouter une aire color√©e sous la courbe, vous utilisez `geom_funfill()` avec l'argument `fun = dfun(...)` pour un graphique de densit√© de probabilit√© ou `fun = cdfun(...)` pour un graphique de densit√© de probabilit√© cumul√©e. Enfin pour annoter le graphique avec du texte, vous utilisez `annotate("text", ...)`.

<!-- üí¨ **Le code ajout√© en derni√®re ligne apr√®s celui qui g√©n√®re le graphique correspond au snippet `.inllabel`.** -->

```{r normal2_h2, exercise=TRUE, exercise.lines=5}
N1 <- dist_normal(mu = 10, sigma = 3)
chart(N1) +
  ylab("Densit√© de probabilit√©") +
  ___(fun = ___(N1), from = ___, to = ___) +
  ___("text", x = ___, y = 0.06, label = "P[8, 12]", col = "red")
```

```{r normal2_h2-hint-1}
N1 <- dist_normal(mu = 10, sigma = 3)
chart(N1) +
  ylab("Densit√© de probabilit√©") +
  geom_funfill(fun = ___(N1), from = ___, to = ___) +
  annotate("text", x = ___, y = 0.06, label = "P[8, 12]", col = "red")

 #### ATTENTION: Hint suivant = solution !####
```

```{r normal2_h2-solution}
## Solution ##
N1 <- dist_normal(mu = 10, sigma = 3)
chart(N1) +
  ylab("Densit√© de probabilit√©") +
  geom_funfill(fun = dfun(N1), from = 8, to = 12) +
  annotate("text", x = 10, y = 0.06, label = "P[8, 12]", col = "red")
```

```{r normal2_h2-check}
grade_code("Si `geom_funfill()` est une function sp√©cifique √† `SciViews::R` pour compl√©ter les graphiques des distributions, `annotate(\"text\", ...)` est classique pour les graphiques de type {ggplot2} comme ici et est donc r√©utilisable pour annoter tous vos graphiques.")
```

### Calculs avec la loi normale

Comme pour les autres lois de distributions, il est vital de pouvoir calculer des probabilit√©s en fonctions de quantiles et des quantiles √† partir de probabilit√©s. Nous nous r√©f√©rerons toujours √† la probabilit√©s d'avoir une valeur plus petite (aire √† gauche avec `lower.tail = TRUE`) ou plus grande (aide √† droite avec `lower.tail = FALSE`) que ce quantile. Une aire comprise entre deux quantiles doit se calculer en deux temps (Pr{Q2} - Pr{Q1}).

![](images/maize.jpg)

Vous √©tudiez la croissance de plants de ma√Øs. A partir d'un grand nombre de mesures, vous avez pu d√©terminer que la hauteur de vos plants suit une distribution normale avec une moyenne de 145 cm et une variance de 484 (donc un √©cart type de 22 cm).

Calculez la probabilit√©s d'avoir un plant de ma√Øs pris au hasard de moins de 100 cm de haut dans votre champ.

<!-- üí¨ **Ce code correspond au snippet `.inproba`.** -->

```{r normal3_h3, exercise=TRUE}
pnorm(___, mean = ___, sd = ___, lower.tail = ___)
```

```{r normal3_h3-hint-1}
pnorm(100, mean = ___, sd = ___, lower.tail = ___)
```

```{r normal3_h3-hint-2}
pnorm(100, mean = 145, sd = ___, lower.tail = ___)

 #### ATTENTION: Hint suivant = solution !####
```

```{r normal3_h3-solution}
## Solution ##
pnorm(100, mean = 145, sd = 22, lower.tail = TRUE)
```

```{r normal3_h3-check}
grade_code("Ici, c'est bien l'aire √† gauche du quantile 100 cm qui nous int√©resse. Elle correspond √† la probabilit√© qu'un plant soit moins haut que ce quantile et se calcule en sp√©cifiant `lower.tail = TRUE` dans la fonction `pnorm()`.")
```

Calculez la probabilit√©s d'avoir un plant de ma√Øs pr√©lev√© au hasard dont la hauteur est comprise entre 120 et 150 cm en utilisant les aires √† gauche des quantiles et toujours la fonction `pnorm()`.

```{r normal4_h3, exercise=TRUE}
pnorm(___, mean = ___, sd = ___, lower.tail = ___) -
  ___
```

```{r normal4_h3-hint-1}
pnorm(150, mean = ___, sd = ___, lower.tail = ___) -
  pnorm(___, mean = ___, sd = ___, lower.tail = ___)
```

```{r normal4_h3-hint-2}
pnorm(150, mean = ___, sd = ___, lower.tail = ___) -
  pnorm(120, mean = ___, sd = ___, lower.tail = ___)

 #### ATTENTION: Hint suivant = solution !####
```

```{r normal4_h3-solution}
## Solution ##
pnorm(150, mean = 145, sd = 22, lower.tail = TRUE) -
  pnorm(120, mean = 145, sd = 22, lower.tail = TRUE)
```

```{r normal4_h3-check}
grade_code("Une aire comprise entre deux quantiles se calcule toujours en soustrayant la plus petite de la plus grande (par rapport aux deux quantiles respectifs). Deux calculs sont possibles¬†: via les aires √† gauche comme ici, ou via les aires √† droite en utilisant `lower.tail = FALSE`.")
```

En partant de la distribution th√©orique $Y \sim N(10, 6.25)$, calculez le quantile d√©limitant une probabilit√©s √† droite de 0.1 (10% des plus grandes observations), en utilisant l'une des fonctions p/q/r/d.

<!-- üí¨ **Ce code correspond au snippet `.inquant`.** -->

```{r normal5_h2, exercise=TRUE}
qnorm(___, mean = ___, sd = __, lower.tail = ___)
```

```{r normal5_h2-hint-1}
qnorm(0.1, mean = ___, sd = ___, lower.tail = ___)

 #### ATTENTION: Hint suivant = solution !####
```

```{r normal5_h2-solution}
## Solution ##
qnorm(0.1, mean = 10, sd = 2.5, lower.tail = FALSE)
```

```{r normal5_h2-check}
grade_code("La fonction `qnorm()` calcule un quantile √† partir d'une probabilit√©, contrairement √† `pnorm()` qui calcule une probabilit√© √† partir d'un quantile. Vous auriez aussi pu utiliser `quantile(dist_normal(10, 2.5), 1 - 0.1)`... pourquoi `1 - 0.1` ? Parce que `quantile()` calcule toujours par rapport √† l'aire √† gauche, donc, l'aire compl√©mentaire √† nos 10%, soit 90% ici !")
```

## Conclusion

Vous rencontrerez tr√®s souvent la loi normale dans vos analyses de donn√©es biologiques. √ätre capable de v√©rifier si un √©chantillon suit cette distribution ou non sera √©galement tr√®s utile. Faites tout de m√™me attention √† la **taille de l'√©chantillon**. Il vous faut plusieurs dizaines d'observations, sinon, vous n'aurez pas suffisamment de donn√©es pour l'estimer de mani√®re valable.

```{r comm_noscore, echo=FALSE}
question_text(
  "Laissez-nous vos impressions sur cet outil p√©dagogique",
  answer("", TRUE, message = "Pas de commentaires... C'est bien aussi."),
  incorrect = "Vos commentaires sont enregistr√©s.",
  placeholder = "Entrez vos commentaires ici...",
  allow_retry = TRUE
)
```

```{css, echo=FALSE}
@media print {
  .topics {
    width: 100% !important;
    padding: 0 0.5em 0 !important;
  }
  .topicsContainer, .topicsContainer *, .learnrBanner, .learnrBanner *, .topicActions, .topicActions * {
    display: none !important;
  }
}
```
